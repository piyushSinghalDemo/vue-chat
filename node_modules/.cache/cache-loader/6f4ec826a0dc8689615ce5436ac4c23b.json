{"remainingRequest":"/home/essentio/code/ChatExpress/node_modules/babel-loader/lib/index.js!/home/essentio/code/ChatExpress/node_modules/vue-loader/lib/selector.js?type=script&index=0!/home/essentio/code/ChatExpress/src/components/Chat.vue","dependencies":[{"path":"/home/essentio/code/ChatExpress/src/components/Chat.vue","mtime":1554981793844},{"path":"/home/essentio/code/ChatExpress/.babelrc","mtime":1554981793836},{"path":"/home/essentio/code/ChatExpress/node_modules/cache-loader/dist/cjs.js","mtime":1554982094106},{"path":"/home/essentio/code/ChatExpress/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/home/essentio/code/ChatExpress/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/home/essentio/code/ChatExpress/node_modules/@babel/runtime/helpers/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport io from 'socket.io-client';\nexport default {\n  data: function data() {\n    return {\n      user: '',\n      message: '',\n      messages: [],\n      socket: io('localhost:3001')\n    };\n  },\n  methods: {\n    sendMessage: function sendMessage(e) {\n      e.preventDefault();\n      this.socket.emit('SEND_MESSAGE', {\n        user: this.user,\n        message: this.message\n      });\n      this.message = '';\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.socket.on('MESSAGE', function (data) {\n      _this.messages = _toConsumableArray(_this.messages).concat([data]); // you can also do this.messages.push(data)\n    });\n  }\n};",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AAEA;wBAEA;;YAEA;eACA;gBACA;iBACA,AACA;AALA;AAMA;;yCAEA;QAEA;;mBAEA;sBACA,AACA;AAHA;qBAIA;AACA,AACA;AAVA;;AAWA;;8CACA;kEACA,QACA;AACA;AACA;AAzBA","file":"Chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"card mt-3\">\n      <div class=\"card-body\">\n          <div class=\"card-title\">\n              <h3>Chat Group</h3>\n              <hr>\n          </div>\n          <div class=\"card-body\">\n              <div class=\"messages\" v-for=\"(msg, index) in messages\" :key=\"index\">\n                  <p><span class=\"font-weight-bold\">{{ msg.user }}: </span>{{ msg.message }}</p>\n              </div>\n          </div>\n      </div>\n      <div class=\"card-footer\">\n          <form @submit.prevent=\"sendMessage\">\n              <div class=\"gorm-group\">\n                  <label for=\"user\">User:</label>\n                  <input type=\"text\" v-model=\"user\" class=\"form-control\">\n              </div>\n              <div class=\"gorm-group pb-3\">\n                  <label for=\"message\">Message:</label>\n                  <input type=\"text\" v-model=\"message\" class=\"form-control\">\n              </div>\n              <button type=\"submit\" class=\"btn btn-success\">Send</button>\n          </form>\n      </div>\n  </div>\n</template>\n\n<script>\nimport io from 'socket.io-client';\n\nexport default {\n    data() {\n        return {\n            user: '',\n            message: '',\n            messages: [],\n            socket : io('localhost:3001')\n        }\n    },\n    methods: {\n        sendMessage(e) {\n            e.preventDefault();\n            \n            this.socket.emit('SEND_MESSAGE', {\n                user: this.user,\n                message: this.message\n            });\n            this.message = ''\n        }\n    },\n    mounted() {\n        this.socket.on('MESSAGE', (data) => {\n            this.messages = [...this.messages, data];\n            // you can also do this.messages.push(data)\n        });\n    }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}